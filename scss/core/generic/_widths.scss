/*------------------------------------*\
		$WIDTHS
\*------------------------------------*/
/**
 * Sizes in human readable format. These are used in conjunction with other
 * objects and abstractions found in inuit.css, most commonly the grid system
 * and faux flexbox.
 *
 * We have a mixin to generate our widths and their breakpoint-specific
 * variations.
 */

@mixin grid-setup($namespace: "") {
	/**
	* Whole
	*/
	.#{$namespace}one-whole					{
		@if $use-legacy-grid   { width: 100%;}
		@if $use-flexbox-grid  { @include flex-basis(100%);}
	}


	/**
	* Halves
	*/
	.#{$namespace}one-half					{
		@if $use-legacy-grid   { width: 50%;}
		@if $use-flexbox-grid  { @include flex-basis(50%);}
	}


	/**
	* Thirds
	*/
	.#{$namespace}one-third					{
		@if $use-legacy-grid   { width: 33.333%;}
		@if $use-flexbox-grid  { @include flex-basis(33.333%);}
	}
	.#{$namespace}two-thirds				{
		@if $use-legacy-grid   { width: 66.666%;}
		@if $use-flexbox-grid  { @include flex-basis(66.666%);}
	}


	/**
	* Quarters
	*/
	.#{$namespace}one-quarter				{
		@if $use-legacy-grid   { width: 25%;}
		@if $use-flexbox-grid  { @include flex-basis(25%);}
	}
	.#{$namespace}two-quarters			{ @extend .#{$namespace}one-half;}
	.#{$namespace}three-quarters		{
		@if $use-legacy-grid   { width: 75%;}
		@if $use-flexbox-grid  { @include flex-basis(75%);}
	}


	/**
	* Fifths
	*/
	.#{$namespace}one-fifth					{
		@if $use-legacy-grid   { width: 20%;}
		@if $use-flexbox-grid  { @include flex-basis(20%);}
	}
	.#{$namespace}two-fifths				{
		@if $use-legacy-grid   { width: 40%;}
		@if $use-flexbox-grid  { @include flex-basis(40%);}
	}
	.#{$namespace}three-fifths			{
		@if $use-legacy-grid   { width: 60%;}
		@if $use-flexbox-grid  { @include flex-basis(60%);}
	}
	.#{$namespace}four-fifths				{
		@if $use-legacy-grid   { width: 80%;}
		@if $use-flexbox-grid  { @include flex-basis(80%);}
	}


	/**
	* Sixths
	*/
	.#{$namespace}one-sixth					{
		@if $use-legacy-grid   { width: 16.666%;}
		@if $use-flexbox-grid  { @include flex-basis(16.666%);}
	}
	.#{$namespace}two-sixths				{ @extend .#{$namespace}one-third; }
	.#{$namespace}three-sixths			{ @extend .#{$namespace}one-half; }
	.#{$namespace}four-sixths				{ @extend .#{$namespace}two-thirds; }
	.#{$namespace}five-sixths				{
		@if $use-legacy-grid   { width: 83.333%;}
		@if $use-flexbox-grid  { @include flex-basis(83.333%);}
	}


	/**
	* Eighths
	*/
	.#{$namespace}one-eighth				{
		@if $use-legacy-grid   { width: 12.5%;}
		@if $use-flexbox-grid  { @include flex-basis(12.5%);}
	}
	.#{$namespace}two-eighths				{ @extend .#{$namespace}one-quarter; }
	.#{$namespace}three-eighths			{
		@if $use-legacy-grid   { width: 37.5%;}
		@if $use-flexbox-grid  { @include flex-basis(37.5%);}
	}
	.#{$namespace}four-eighths			{ @extend .#{$namespace}one-half; }
	.#{$namespace}five-eighths			{
		@if $use-legacy-grid   { width: 62.5%;}
		@if $use-flexbox-grid  { @include flex-basis(62.5%);}
	}
	.#{$namespace}six-eighths				{ @extend .#{$namespace}three-quarters; }
	.#{$namespace}seven-eighths			{
		@if $use-legacy-grid   { width: 87.5%;}
		@if $use-flexbox-grid  { @include flex-basis(87.5%);}
	}


	/**
	* Tenths
	*/
	.#{$namespace}one-tenth					{
		@if $use-legacy-grid   { width: 10%;}
		@if $use-flexbox-grid  { @include flex-basis(10%);}
	}
	.#{$namespace}two-tenths				{ @extend .#{$namespace}one-fifth; }
	.#{$namespace}three-tenths			{
		@if $use-legacy-grid   { width: 30%;}
		@if $use-flexbox-grid  { @include flex-basis(30%);}
	}
	.#{$namespace}four-tenths				{ @extend .#{$namespace}two-fifths; }
	.#{$namespace}five-tenths				{ @extend .#{$namespace}one-half; }
	.#{$namespace}six-tenths				{ @extend .#{$namespace}three-fifths; }
	.#{$namespace}seven-tenths			{
		@if $use-legacy-grid   { width: 70%;}
		@if $use-flexbox-grid  { @include flex-basis(70%);}
	}
	.#{$namespace}eight-tenths			{ @extend .#{$namespace}four-fifths; }
	.#{$namespace}nine-tenths				{
		@if $use-legacy-grid   { width: 90%;}
		@if $use-flexbox-grid  { @include flex-basis(90%);}
	}


	/**
	* Twelfths
	*/
	.#{$namespace}one-twelfth				{
		@if $use-legacy-grid   { width: 8.333%;}
		@if $use-flexbox-grid  { @include flex-basis(8.333%);}
	}
	.#{$namespace}two-twelfths			{ @extend .#{$namespace}one-sixth; }
	.#{$namespace}three-twelfths		{ @extend .#{$namespace}one-quarter; }
	.#{$namespace}four-twelfths			{ @extend .#{$namespace}one-third; }
	.#{$namespace}five-twelfths			{
		@if $use-legacy-grid   { width: 41.666%;}
		@if $use-flexbox-grid  { @include flex-basis(41.666%);}
	}
	.#{$namespace}six-twelfths			{ @extend .#{$namespace}one-half; }
	.#{$namespace}seven-twelfths		{
		@if $use-legacy-grid   { width: 58.333%;}
		@if $use-flexbox-grid  { @include flex-basis(58.333%);}
	}
	.#{$namespace}eight-twelfths		{ @extend .#{$namespace}two-thirds; }
	.#{$namespace}nine-twelfths			{ @extend .#{$namespace}three-quarters; }
	.#{$namespace}ten-twelfths			{ @extend .#{$namespace}five-sixths; }
	.#{$namespace}eleven-twelfths		{
		@if $use-legacy-grid   { width: 91.666%;}
		@if $use-flexbox-grid  { @include flex-basis(91.666%);}
	}
}

@include grid-setup();



/**
 * If you have set `$responsive` to ‘true’ in `_vars.scss` then you now have
 * access to these classes. You can define at which breakpoint you’d like an
 * element to be a certain size, e.g.:
 *
 * `<div class="g  one-quarter	lap-one-half	palm-one-whole"> ... </div>`
 *
 * This would create a `div` that, at ‘desktop’ sizes, takes up a quarter of the
 * horizontal space, a half of that space at ‘tablet’ sizes, and goes full width
 * at ‘mobile’ sizes.
 *
 * Demo: jsfiddle.net/inuitcss/WS4Ge
 *
 */

@if $responsive == true{

@include media-query(palm){
	@include grid-setup("palm-");
}

@include media-query(lap){
	@include grid-setup("lap-");
}

@include media-query(lap-and-up){
	@include grid-setup("lap-and-up-");
}

@include media-query(portable){
	@include grid-setup("portable-");
}

@include media-query(desk){
	@include grid-setup("desk-");
}


/**
 * If you have set the additional `$responsive-extra` variable to ‘true’ in
 * `_vars.scss` then you now have access to the following class available to
 * accomodate much larger screen resolutions.
 */

@if $responsive-extra {

@include media-query(desk-wide){
	@include grid-setup("desk-wide-");
}

}

} /* endif */
